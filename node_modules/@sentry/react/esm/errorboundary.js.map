{"version":3,"file":"errorboundary.js","sourceRoot":"","sources":["../src/errorboundary.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as Sentry from '@sentry/browser';\nimport * as hoistNonReactStatic from 'hoist-non-react-statics';\nimport * as React from 'react';\n\nexport const UNKNOWN_COMPONENT = 'unknown';\n\nexport type FallbackRender = (fallback: {\n  error: Error | null;\n  componentStack: string | null;\n  resetError(): void;\n}) => React.ReactNode;\n\nexport type ErrorBoundaryProps = {\n  /** If a Sentry report dialog should be rendered on error */\n  showDialog?: boolean;\n  /**\n   * Options to be passed into the Sentry report dialog.\n   * No-op if {@link showDialog} is false.\n   */\n  dialogOptions?: Sentry.ReportDialogOptions;\n  // tslint:disable no-null-undefined-union\n  /**\n   * A fallback component that gets rendered when the error boundary encounters an error.\n   *\n   * Can either provide a React Component, or a function that returns React Component as\n   * a valid fallback prop. If a function is provided, the function will be called with\n   * the error, the component stack, and an function that resets the error boundary on error.\n   *\n   */\n  fallback?: React.ReactNode | FallbackRender;\n  // tslint:enable no-null-undefined-union\n  /** Called with the error boundary encounters an error */\n  onError?(error: Error, componentStack: string): void;\n  /** Called on componentDidMount() */\n  onMount?(): void;\n  /** Called if resetError() is called from the fallback render props function  */\n  onReset?(error: Error | null, componentStack: string | null): void;\n  /** Called on componentWillUnmount() */\n  onUnmount?(error: Error | null, componentStack: string | null): void;\n};\n\ntype ErrorBoundaryState = {\n  componentStack: string | null;\n  error: Error | null;\n};\n\nconst INITIAL_STATE = {\n  componentStack: null,\n  error: null,\n};\n\n/**\n * A ErrorBoundary component that logs errors to Sentry.\n * Requires React >= 16\n */\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  public state: ErrorBoundaryState = INITIAL_STATE;\n\n  public componentDidCatch(error: Error, { componentStack }: React.ErrorInfo): void {\n    const eventId = Sentry.captureException(error, { contexts: { react: { componentStack } } });\n    const { onError, showDialog, dialogOptions } = this.props;\n    if (onError) {\n      onError(error, componentStack);\n    }\n    if (showDialog) {\n      Sentry.showReportDialog({ ...dialogOptions, eventId });\n    }\n\n    // componentDidCatch is used over getDerivedStateFromError\n    // so that componentStack is accessible through state.\n    this.setState({ error, componentStack });\n  }\n\n  public componentDidMount(): void {\n    const { onMount } = this.props;\n    if (onMount) {\n      onMount();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    const { error, componentStack } = this.state;\n    const { onUnmount } = this.props;\n    if (onUnmount) {\n      onUnmount(error, componentStack);\n    }\n  }\n\n  public resetErrorBoundary = () => {\n    const { onReset } = this.props;\n    if (onReset) {\n      onReset(this.state.error, this.state.componentStack);\n    }\n    this.setState(INITIAL_STATE);\n  };\n\n  public render(): React.ReactNode {\n    const { fallback } = this.props;\n    const { error, componentStack } = this.state;\n\n    if (error) {\n      if (React.isValidElement(fallback)) {\n        return fallback;\n      }\n      if (typeof fallback === 'function') {\n        return fallback({ error, componentStack, resetError: this.resetErrorBoundary }) as FallbackRender;\n      }\n\n      // Fail gracefully if no fallback provided\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n\nfunction withErrorBoundary<P extends object>(\n  WrappedComponent: React.ComponentType<P>,\n  errorBoundaryOptions: ErrorBoundaryProps,\n): React.FC<P> {\n  const componentDisplayName = WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped: React.FC<P> = (props: P) => (\n    <ErrorBoundary {...errorBoundaryOptions}>\n      <WrappedComponent {...props} />\n    </ErrorBoundary>\n  );\n\n  Wrapped.displayName = `errorBoundary(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoistNonReactStatic(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\nexport { ErrorBoundary, withErrorBoundary };\n"]}